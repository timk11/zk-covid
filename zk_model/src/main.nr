use dep::noir_ml::layers::{fc};
use dep::noir_ml::activations::{relu};
use dep::noir_ml::utils::{arg_max};

global w1: [Field; 380] = [-565, 4084, 2296, 90, -1508, -2057, -3508, 3453, 966, 1031, 3506, -2570, -3669, -1225, -8425, 4897, 2755, -5989, 6923, -1920, 3893, -5332, -4422, -838, -3851, 5804, 664, -2604, 3965, -3080, -2537, 30, -789, 2782, 6024, -882, -2600, -562, -1244, -873, -614, 604, 596, 0, 614, -614, -612, 605, -381, 0, 1925, 3434, 4557, 1825, 2240, 1649, -2863, -691, -3587, -1266, 119, -121, 3739, -1193, 277, 76, -2538, 3637, -2700, 2967, 1915, -1548, -3168, 1470, 2028, 2246, 1272, -2477, -980, -2918, 1872, 1516, -908, -3187, -290, -3179, -133, 1592, 1616, -1018, -2043, 2372, 2684, -140, 3065, 1322, 289, 378, -2316, -3153, -1626, 1176, -2698, -639, 3659, -774, -220, 668, -1647, -3326, -2067, -2825, 2643, 2472, 268, 2765, 1812, -2693, 2815, 331, 2640, 3947, -338, -3251, -647, -608, 1930, 3717, -3301, -378, 1187, -1331, -3576, -1615, 4437, -396, 308, 438, -949, 2933, 2360, -85, 1669, -1880, 1197, -3055, 440, 1560, -4085, -1672, 3343, -764, -1632, -598, 4530, -1908, 837, 2959, -1583, 1165, 468, 1481, -181, -345, -1115, 2299, -1158, -3475, -3144, 276, 1467, -3794, -424, -2544, 666, -2661, 1421, -1362, 3104, -2894, -800, -1527, 4023, 2153, -443, 1141, 1853, 1626, 413, -2268, -1628, 3398, 2407, 219, 322, -372, 1654, 2143, 2682, 1537, 1793, -3656, -3463, 3166, 40, -2607, -5015, 442, -3040, -2575, -71, 2634, 2314, -2645, 3115, -2041, -958, 3029, 1262, 2017, 984, 1288, -3077, -1540, 9, -1521, 3262, -1002, 2563, 614, 3267, -980, -671, 119, -3386, 2138, -1534, -4462, 1377, -2303, 3254, 4475, 4052, -1461, -2027, 2914, -871, 4582, 3463, 2048, -602, -518, 1807, -1978, -1500, 705, 3330, 891, 711, -3300, 1146, 2815, -4025, -199, 1515, 2154, 1184, 703, -1323, -1412, 2484, 3397, 3713, 2415, 1449, -74, 1752, 2283, 1711, 1644, 3312, -610, -1300, -3529, 1690, -1741, 67, -568, -1344, 134, -3230, -2266, 3168, -2009, -939, 2437, 1084, -1018, 715, -3306, -2814, 1244, 1157, 568, 2598, 2559, -48, -195, 2388, -2069, 777, -2396, -4349, 2673, 3511, 284, -559, -3374, -2557, -2278, 1589, 136, -397, -807, 1750, 2857, 299, -716, 211, -2116, -930, 3098, -2337, -3282, -1853, -3575, 2166, 2741, -63, -3287, 527, 738, -2139, -1233, 888, 765, 921, -2925, -1100, 399, -1328, 4882, 3428, -2867, 332, -579, -2850, 2889, 764, -596, -91, 1835, 341, -189, 3946, -408, 2884, 3709, -1091, -3367, -2671, -2242, -2180, 278, -746, -992, 2198, -2654, 1709, -1940];
global b1: [Field; 10] = [-23380676, 26076739, 18895094, 21290320, 29737288, 21145987, -19156987, -10951618, 19672158, 17136342];

global w2: [Field; 10] = [97962672, -27719523, -39368369, 37404730, -67286418, 108312827, 60402385, -28170433, 63735962, 34254064];
global b2: [Field; 1] = [-6858795766143916];

fn main(
    input: [Field; 38],
    pub result: Field
) {
    assert(prediction(input) == result);
}

fn prediction(
    input: [Field; 38]
) {
    let output = relu(fc(input, w1, b1));
    let output = fc(input, w2, b2);
    output[0]
}

#[test]
fn test_main() {
    main(1, 2);

    // Uncomment to make test fail
    // main(1, 1);
}
